import {
  Model,
  Table,
  Column,
  DataType,
  Index,
  Sequelize,
  ForeignKey,
} from 'sequelize-typescript';

interface PatientAttributes {
  id: number;
  doctorsOfficeId: number;
  firstName: string;
  lastName: string;
  middleName?: string;
  dateOfBirth: string;
  openDate?: string;
  activationCode?: string;
  activaionTime?: Date;
}

@Table({ tableName: 'PATIENT', timestamps: false })
export class Patient
  extends Model<PatientAttributes, PatientAttributes>
  implements PatientAttributes
{
  @Column({
    field: 'ID',
    primaryKey: true,
    type: DataType.INTEGER,
    autoIncrement: true,
    comment: 'Surogate key - autoincerment number',
  })
  id!: number;

  @Column({
    field: 'DOCTORS_OFFICE_ID',
    type: DataType.INTEGER,
    comment: 'FK reference of the doctors office',
  })
  doctorsOfficeId!: number;

  @Column({
    field: 'FIRST_NAME',
    type: DataType.STRING(40),
    comment: 'First name of the patient',
  })
  firstName!: string;

  @Column({
    field: 'LAST_NAME',
    type: DataType.STRING(40),
    comment: 'Last name of the patient',
  })
  lastName!: string;

  @Column({
    field: 'MIDDLE_NAME',
    allowNull: true,
    type: DataType.STRING(40),
    comment: 'Patient middle name; parent name',
  })
  middleName?: string;

  @Column({
    field: 'DATE_OF_BIRTH',
    type: DataType.DATEONLY,
    comment: 'Patient date of birth',
  })
  dateOfBirth!: string;

  @Column({
    field: 'OPEN_DATE',
    allowNull: true,
    type: DataType.DATEONLY,
    comment: 'Date when paient record was opened',
  })
  openDate?: string;

  @Column({
    field: 'ACTIVATION_CODE',
    allowNull: true,
    type: DataType.CHAR(6),
    comment:
      'Code for activation of mobile application - unique code generated by doctor when register patient in office.',
  })
  activationCode?: string;

  @Column({
    field: 'ACTIVAION_TIME',
    allowNull: true,
    type: DataType.DATE,
    comment:
      'Time when mobile application register familly on application backend.',
  })
  activaionTime?: Date;
}
